
/*
  Motion timer to set when the last motion was recorded
  Fade timer to set a mid range fade
  At any time if motion is detected the motion will be rescheduled and Fade
  will be destroyed
  fade down to last value but half Brightness
  raise back up if interrupted

*/
var Timer motionTimer = null
var Timer fadeTimer = null

//Should be less than timeoutMinutes
val int fadeMinutes = 1
val int timeoutMinutes = 2

val String TAG = "PIR"
var int lastBrightness = 100


/**
  Sets the two timers for fade and command off
  Reschedules if they have already been Sets
*/
rule "PIR Changed To ON"
when
  Item contKitchen_PIR received command ON
then

  val hsb = cKitchen_Cabinet_Lights.state as HSBType
  val brightness = hsb.brightness.intValue
  logInfo(TAG, "Brightness: " + brightness)
  gAllLights.members.forEach[item |
    logInfo(TAG, "item name: " + item.name)
  ]

  if(brightness == 0){
    logInfo(TAG, "Setting Brightness: " + hsb.hue+","+ hsb.saturation +"," + lastBrightness)
    cKitchen_Cabinet_Lights.sendCommand(hsb.hue+","+ hsb.saturation +"," + lastBrightness)
  }else{
    lastBrightness = brightness
  }

  if(motionTimer === null){
    logInfo(TAG, "Creating Timer")
    motionTimer = createTimer(now.plusMinutes(timeoutMinutes), [|
      logInfo(TAG, "Fade Timer has triggered")
      contKitchen_PIR.sendCommand(OFF)
      motionTimer = null
    ])
  }else{
    logInfo(TAG, "Reschedule Timer")
    motionTimer.reschedule(now.plusMinutes(timeoutMinutes))
  }
  if(fadeTimer === null){
    logInfo(TAG, "Creating Fade Timer")
    fadeTimer = createTimer(now.plusMinutes(fadeMinutes), [|
      logInfo(TAG, "Fade Timer has triggered")
      gAllLightAnimations.members.forEach[item |
        item.sendCommand("ANIM1")
      ]
    ])
  }else{
    logInfo(TAG, "Reschedule Fade Timer")
    fadeTimer.reschedule(now.plusMinutes(fadeMinutes))
  }

end



/**
  if the PIR gets triggered to off
  the timers have run out
  we take all the members of the light group
  send the off command
*/
rule "PIR Changed To OFF"
when
  Item contKitchen_PIR received command OFF
then
  logInfo(TAG, "Turning off lights")
  gAllLights.members.forEach[item |
    logInfo(TAG, "item name: " + item.name)
    item.sendCommand(OFF)
  ]
end
